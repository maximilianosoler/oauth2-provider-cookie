<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" 
xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:core="http://www.mulesoft.org/schema/mule/core" 
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
xmlns:ss="http://www.springframework.org/schema/security"
xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
xmlns:tls="http://www.mulesoft.org/schema/mule/tls" 
xmlns:oauth2-provider="http://www.mulesoft.org/schema/mule/oauth2-provider"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/oauth2-provider http://www.mulesoft.org/schema/mule/oauth2-provider/current/mule-oauth2-provider.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

	<!-- Cookie Validation Config -->
     <spring:beans>
		<spring:bean id="ssoAuthProvider"
  			class="org.mulesoft.oauth.preauth.SSOTokenAuthenticationProvider">
  		</spring:bean>
  		
  		<ss:authentication-manager id="multiple-users-authentication-manager" alias="authManager">
            <ss:authentication-provider ref="ssoAuthProvider"/>
        </ss:authentication-manager>
    </spring:beans>

	<!-- Validation endpoint -->
    <tls:context name="tls.context.listener" doc:name="TLS Context">
	    <tls:key-store path="${key.store.path}" password="${key.store.password}" keyPassword="${key.store.key.password}"/>
    </tls:context>

    <http:listener-config name="https.listener" protocol="HTTPS" host="0.0.0.0" port="${https.port}" doc:name="HTTPs Listener Configuration" tlsContext-ref="tls.context.listener" />
    <http:request-config name="internal_access_token_connector" host="${internal.https.host}" port="${https.port}" doc:name="HTTP Request Configuration" protocol="HTTPS" tlsContext-ref="tls.context.listener">
        <tls:context>
            <tls:trust-store path="${key.store.path}" password="${key.store.key.password}"/>
            <tls:key-store path="${key.store.path}" keyPassword="${key.store.key.password}" password="${key.store.password}"/>
        </tls:context>
    </http:request-config>
   
    
    <flow name="validateTokenFlow">
        <http:listener config-ref="https.listener" path="${validate.endpoint.path}" doc:name="HTTP"/>
        <oauth2-provider:validate config-ref="external-oauth2-provider"  doc:name="OAuth provider module"/>
        <custom-processor class="com.mulesoft.module.oauth2.ValidatorResponseBuilder" doc:name="Custom Processor"/>
    </flow>
    <flow name="access-token-flow">
        <http:listener config-ref="https.listener" path="${sso.access.token.endpoint.path}"  doc:name="HTTP"/>
        <set-variable variableName="cookies" value="#[message.inboundProperties.cookie]" doc:name="Variable"/>
        <logger message="Cookies are: #[flowVars.cookies]" level="INFO" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-variable doc:sample="MyPojo.dwl" variableName="cookies"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
}]]></dw:set-payload>
            <dw:set-variable variableName="sso-user-token"><![CDATA[%dw 1.0 
%output application/java
---
(((flowVars.cookies splitBy ";") 
	map ($) filter ($ contains "sso-user-token"))[0] splitBy "=")[1]]]></dw:set-variable>
        </dw:transform-message>
        <logger message="user token is #[flowVars.'sso-user-token']" level="INFO" doc:name="Logger"/>
        <http:request config-ref="internal_access_token_connector" path="${access.token.endpoint.path}" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="client_id" value="#[message.inboundProperties.'http.query.params'.client_id]"/>
                <http:query-param paramName="client_secret" value="#[message.inboundProperties.'http.query.params'.client_secret]"/>
                <http:query-param paramName="username" value="sso-user-token"/>
                <http:query-param paramName="password" value="#[flowVars.'sso-user-token']"/>
                <http:query-param paramName="grant_type" value="password"/>
            </http:request-builder>
        </http:request>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-payload value="#[payload]" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>

</mule>
